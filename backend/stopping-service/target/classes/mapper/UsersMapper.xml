<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wyc.mapper.UsersMapper">

    <resultMap type="com.wyc.domain.po.Users" id="UsersResult">
        <id     property="userId"        column="user_id"       />
        <result property="username"      column="username"      />
        <result property="email"         column="email"         />
        <result property="phone"         column="phone"         />
        <result property="Uuid"          column="Uuid"         />
        <result property="passwordHash"  column="password_hash" />
        <result property="balance"       column="balance"       />
        <result property="balanceUpdatedAt" column="balance_updated_at" />
        <result property="isDeleted"     column="is_deleted"    />
        <result property="createdAt"     column="created_at"    />
        <result property="updatedAt"     column="updated_at"    />
    </resultMap>

    <sql id="selectUsersVo">
        select user_id, username, email, phone, password_hash, balance,
        balance_updated_at, is_deleted, created_at, updated_at
        from users
    </sql>

    <!-- 创建索引 -->
    <update id="createIndexes">
        CREATE INDEX IF NOT EXISTS idx_users_username ON Users(username);
        CREATE INDEX IF NOT EXISTS idx_users_phone ON Users(phone);
        CREATE INDEX IF NOT EXISTS idx_users_email ON Users(email);
        CREATE INDEX IF NOT EXISTS idx_users_status ON Users(status);
    </update>

    <!-- 使用username的唯一索引 -->
    <select id="selectByUsername" parameterType="String" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        where username = #{username} and is_deleted = 0
    </select>

    <!-- 使用主键索引 -->
    <select id="selectById" parameterType="Long" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        where user_id = #{userId} and is_deleted = 0
    </select>

    <!-- 使用主键索引，包含已删除用户 -->
    <select id="selectByIdIncludeDeleted" parameterType="Long" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        where user_id = #{userId}
    </select>

    <!-- 使用主键索引 -->
    <select id="selectByUuid" parameterType="String" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        where Uuid = #{Uuid} and is_deleted = 0
    </select>
    <!-- 使用email索引 -->
    <select id="selectByEmail" parameterType="String" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        where email = #{email} and is_deleted = 0
    </select>

    <!-- 使用phone索引 -->
    <select id="selectByPhone" parameterType="String" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        where phone = #{phone} and is_deleted = 0
    </select>

    <!-- 使用is_deleted索引 -->
    <select id="selectActiveUsers" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        where is_deleted = 0
    </select>

    <insert id="insert" parameterType="com.wyc.domain.po.Users" useGeneratedKeys="true" keyProperty="userId">
        insert into users (
            username,
            email,
            phone,
            Uuid,
            password_hash,
            balance,
            balance_updated_at,
            is_deleted
        ) values (
            #{username},
            #{email},
            #{phone},
            #{Uuid},
            #{passwordHash},
            #{balance},
            #{balanceUpdatedAt},
            #{isDeleted}
        )
    </insert>

    <!-- 使用主键索引进行更新 -->
    <update id="updateUser" parameterType="com.wyc.domain.po.Users">
        update users
        <set>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="passwordHash != null">password_hash = #{passwordHash},</if>
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
            <if test="balance != null">balance = #{balance},</if>
            <if test="balanceUpdatedAt != null">balance_updated_at = #{balanceUpdatedAt},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="status != null">status = #{status},</if>
            updated_at = NOW()
        </set>
        where user_id = #{userId}
    </update>

    <!-- 使用is_deleted索引进行软删除 -->
    <update id="softDelete" parameterType="Long">
        update users
        set is_deleted = 1
        where user_id = #{userId}
    </update>

    <select id="getPassword" resultType="java.lang.String">
        SELECT password_hash
        FROM users
        WHERE user_id = #{userId}
    </select>

    <update id="updatePassword">
        UPDATE users
        SET password_hash = #{password},
            updated_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <update id="updateProfile">
        UPDATE users
        <set>
            <if test="profile.nickname != null">nickname = #{profile.nickname},</if>
            <if test="profile.avatar != null">avatar = #{profile.avatar},</if>
            <if test="profile.phone != null">phone = #{profile.phone},</if>
            <if test="profile.email != null">email = #{profile.email},</if>
            updated_at = NOW()
        </set>
        WHERE user_id = #{userId}
    </update>

    <select id="selectByUsernameOrEmailOrPhone" resultMap="UsersResult" parameterType="string">
        <include refid="selectUsersVo"/>
        WHERE (username = #{login} OR email = #{login} OR phone = #{login})
        LIMIT 1
    </select>
</mapper>
