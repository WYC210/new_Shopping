<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wyc.mapper.PaymentsMapper">

    <resultMap type="com.wyc.domain.po.Payments" id="PaymentsResult">
        <id property="paymentId" column="payment_id"/>
        <result property="orderId" column="order_id"/>
        <result property="orderNumber" column="order_number"/>
        <result property="userId" column="user_id"/>
        <result property="amount" column="amount"/>
        <result property="paymentMethod" column="payment_method"/>
        <result property="paidAt" column="paid_at"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <insert id="insert" parameterType="com.wyc.domain.po.Payments" useGeneratedKeys="true" keyProperty="paymentId">
        insert into Payments (
            order_id, order_number, user_id, amount, payment_method, paid_at, created_at
        ) values (
            #{orderId}, #{orderNumber}, #{userId}, #{amount}, #{paymentMethod}, #{paidAt}, #{createdAt}
        )
    </insert>

    <select id="selectById" parameterType="Long" resultMap="PaymentsResult">
        select payment_id, order_id, order_number, user_id, amount, payment_method, paid_at, created_at
        from Payments
        where payment_id = #{paymentId}
    </select>

    <update id="updateById" parameterType="com.wyc.domain.po.Payments">
        update Payments
        <set>
            <if test="orderId != null">order_id = #{orderId},</if>
            <if test="orderNumber != null">order_number = #{orderNumber},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="paymentMethod != null">payment_method = #{paymentMethod},</if>
            <if test="paidAt != null">paid_at = #{paidAt},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
        </set>
        where payment_id = #{paymentId}
    </update>

    <delete id="deleteById" parameterType="Long">
        delete from Payments where payment_id = #{paymentId}
    </delete>

    <select id="selectByOrderId" parameterType="Long" resultMap="PaymentsResult">
        select payment_id, order_id, order_number, user_id, amount, payment_method, paid_at, created_at
        from Payments
        where order_id = #{orderId}
    </select>

</mapper> 